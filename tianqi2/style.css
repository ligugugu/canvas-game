html,body,.background{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    font-family: 'Lato',sans-serif;
}
html{background: #fff;}
body{background: #eee;
    background: -webkit-linear-gradient(bottom,rgba(0,0,200,0.2),rgba(0,0,200,0));
    background: linear-gradient(0deg,rgba(0,0,200,0.2),rgba(0,0,200,0));
    }

.background{background: #eee;
    background: -webkit-linear-gradient(330deg,rgba(50, 150, 100, 0.2), rgba(0, 0, 100, 0));
    background: linear-gradient(120deg,rgba(50, 150, 100, 0.2), rgba(0, 0, 100, 0));
    }
.container{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient:vertical;  /* 垂直排列，子代总height=父级height。若父级固定高度，则子代设置的height无效，子代会撑满父级高度。 */
    -webkit-box-direction:normal;  /* normal 默认值，子代按html顺序排列 */
    -ms-flex-direction:column; /* 主轴与块轴方向作为默认的书写模式。即纵向从上往下排列（顶对齐）。 */
    flex-direction: column;
    -webkit-box-align:center;  /*在父级设置，子代的在次轴上的对齐方式。： 居中对齐 */
    -ms-flex-align:center; /*居中对齐 */
    align-items: center;  /* 适用于：flex容器 ，弹性盒子元素在该行的侧轴（纵轴）上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。 */
    -webkit-box-pack:center; /* 通过一起使用 box-align 和 box-pack 属性，对 div 框的子元素进行居中： */
    -ms-flex-pack:center;
    justify-content: center;  /* 用于设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式：项目位于容器的中心。 */
    margin: 0;
    padding: 0;
    height: 100%;
    width: 100%;
    overflow: auto;
    position: relative;
    background: #eee;
    background: -webkit-linear-gradient(210deg, rgba(150, 50, 50, 0.3), rgba(0, 0, 200, 0));
    background: linear-gradient(240deg, rgba(150, 50, 50, 0.3), rgba(0, 0, 200, 0));
}
nav ul {
  margin: 20px 20px 0 20px;
  list-style-type: none;
  padding: 0;
  display: -webkit-box;   /* display:flex和display:box都可用于弹性布局，不同的是display:box是2009年的命名，已经过时，用的时候需要加上前缀；display:flex是2012年之后的命名。在实际的测试中display:flex不能完全的替代display:box。 */
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;  /* 水平排列，子代总width=父级width。若父级固定宽度，则子代设置的width无效，子代会撑满父级宽度。 */
  -webkit-box-direction: normal;   /* normal 默认值，子代按html顺序排列 */
      -ms-flex-direction: row;     /* 主轴与行内轴方向作为默认的书写模式。即横向从左到右排列（左对齐）。 */
          flex-direction: row;
}
nav li a {
  display: block;
  width: 50px;
  text-align: center;
  color: #aaa;
  cursor: pointer; /* 光标呈现为指示链接的指针（一只手） */
}
nav li a:hover {
  color: #444;
}
nav li a.active {
  color: #4444ff;
}
#card{
    box-shadow: 9px 7px 40px -6px rgba(0,0,0,0.25);
    overflow: hidden;
    width: 300px;
    padding: 0;
    margin: 20px;
    height: 400px;
    border-radius: 5px;
    position: relative;
}
#card .details{
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    padding: 16px 20px;
    color: #888;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
        -webkit-box-pack: justify;  /* 通过一起使用 box-align 和 box-pack 属性，对 div 框的子元素进行居中：在每个子元素之间分割多余的空间（首个子元素前和最后一个子元素后没有多余的空间）。 */
            -ms-flex-pack: justify;
        justify-content: space-between; /* 在弹性盒对象的 <div> 元素中的各项周围留有空白：项目位于各行之前、之间、之后都留有空白的容器内。	 */
}
.thunder #card .details{
    color: #ddd;
}
#card .details .right{
    margin: 4px 0;
}
#card .details .right{
    text-align: right;
}
#card .details #date{
    margin: 4px 0;
}
#card .details #summary{
    font-weight: 600;
    font-size: 22px;
}
#card .details .temp{
    font-size: 60px;
    line-height: 60px;
}
#card .details .temp span{
    font-size: 18px;
    line-height: 30px;
    vertical-align: top;
    margin-left: 5px;
}
.weather{
    border-color: #DAE3FD;
    -webkit-transition:background-color 2s ease;
    transition:background-color 2s ease;
}
.thunder .weather{
    background-color: #9FA4AD;
}
.rain .weather {
  background-color: #D8D8D8;
}
.sun .weather {
  background-color: #ccccff;
}
.weather #inner{
    background-color: white;
    background: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0) 100%);
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0) 100%);
}
.weather .cloud {
  -webkit-transition: fill 2s ease;
  transition: fill 2s ease;
}
.weather #cloud1 {
  fill: #efefef;
}
.thunder .weather #cloud1 {
  fill: #9FA4AD;
}
.weather #cloud2 {
  fill: #E6E6E6;
}
.thunder .weather #cloud2 {
  fill: #8B8E98;
}
.weather #cloud3 {
  fill: #D5D5D5;
}
.thunder .weather #cloud3 {
  fill: #7B7988;
}
#outer, #back {
  position: fixed;
  pointer-events: none;
}
